openapi: "3.0.2"
info:
  title: aiGuru
  version: "1.0.0"
components:
  # Authentication using bearer token
  securitySchemes:
    bearerAuth:
      description: "#### Example: Bearer [TOKEN]"
      type: http
      scheme: bearer
      bearerFormat: JWT

  # Response message
  responses:
    Success:
      description: |
        - success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: success

    UnprocessableEntity:
      description: |
        - Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: validation error

    ConflictError:
      description: |
        - ConflictError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: conflict error

    BadRequestError:
      description: |
        - bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: bad request error

    UnauthorizedError:
      description: |
        - Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized

    NotFoundError:
      description: |
        - NotFoundError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not Found

paths:
  /auth/register:
    post:
      description: register user
      summary: register user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: rutvik@123
                confirmPassword:
                  type: string
                  example: rutvik@123

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/verify-email/{token}:
    post:
      summary: Verify email
      description: |
        - Verify email
      tags:
        - Auth
      
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
            example: 659e45cbd2d793f9ca90420beghfgdhfghdghgdhfhgweyurtyuwytuyruwgfchrhvhvvagfghfbhrbb

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/resend-verify-email:
    post:
      summary: Resend verify email
      description: |
        - Resend verify email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: rutvik@mailinator.com
              required:
                - email

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/login:
    post:
      description: login user
      summary: login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: rutvik@123

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/google:
    post:
      summary: Google login
      description: |
        - Google login
      tags:
        - Auth
      
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
            example: 659e45cbd2d793f9ca90420beghfgdhfghdghgdhfhgweyurtyuwytuyruwgfchrhvhvvagfghfbhrbb

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/refresh-token:
    post:
      description: Refresh token
      summary: Refresh token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzM3NDAxMjI3OGEzMGRiODUyYTM1N2MiLCJpYXQiOjE3MzE2Nzc5ODUsImV4cCI6MTczMjI4Mjc4NX0.yUkxGyGn-8ljEEjjEoSi5H2P_CocV2ptaMRCQz7O4Dw

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/logout:
    post:
      description: Logout
      summary: Logout
      tags:
        - Auth

      security:
        - bearerAuth: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzM3NDAxMjI3OGEzMGRiODUyYTM1N2MiLCJpYXQiOjE3MzE2Nzc5ODUsImV4cCI6MTczMjI4Mjc4NX0.yUkxGyGn-8ljEEjjEoSi5H2P_CocV2ptaMRCQz7O4Dw

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/forgot-password:
    post:
      summary: Forgot password
      description: |
        - forgot password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: rutvik@mailinator.com
              required:
                - email

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/verify-token/{token}:
    post:
      summary: Verify token
      description: |
        - Verify token
      tags:
        - Auth
      
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
            example: 659e45cbd2d793f9ca90420beghfgdhfghdghgdhfhgweyurtyuwytuyruwgfchrhvhvvagfghfbhrbb

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/resend-email:
    post:
      summary: Resend email
      description: |
        - Resend email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: rutvik@mailinator.com
              required:
                - email

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /auth/reset-password/{token}:
    post:
      summary: Verify token
      description: |
        - Verify token
      tags:
        - Auth
      
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
            example: 659e45cbd2d793f9ca90420beghfgdhfghdghgdhfhgweyurtyuwytuyruwgfchrhvhvvagfghfbhrbb
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  example: Rutvik@111
                confirmPassword:
                  type: string
                  example: Rutvik@111
              required:
                - newPassword
                - confirmPassword

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"       

  /student/profile:
    get:
      description: Student profile
      summary: Student profile
      tags:
        - Student

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  
  /student/onboarding-form:
    post:
      summary: Onboarding form
      tags:
        - Student
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: rutvik makvana
                photo:
                  type: string
                  format: binary
                email:
                  type: string
                  example: rutvik@mailinator.com
                birthDate:
                  type: number
                  example: 1738988997
                phone:
                  type: number
                  example: 1234500000
                fatherName:
                  type: string
                  example: abcd
                motherName:
                  type: string
                  example: wxyz
                address:
                  type: string
                  example: Gujarat, India
                city:
                  type: string
                  example: Surat
                country:
                  type: string
                  example: India
                schoolName:
                  type: string
                  example: SCET
                board:
                  type: string
                  example: GTU
                mediumOfStudy:
                  type: string
                  example: English 
                class:
                  type: string
                  example: 9     
                major:
                  type: Stirng
                  example: major
                subjects:
                  type: array  
                otherSubject:
                  type: string
                  example: Gujarati
                otherActivities:
                  type: string
                  example: Dancing
                selectedDays:
                  type: array
                timeAvailability:
                  type: string
                  example: 11:11 hrs
                timeToFinish:
                  type: string
                  example: 2 months

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /other/contact-us:
    post:
      description: Contact Us
      summary: Contact Us
      tags:
        - Others

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: rutvik makvana
                email:
                  type: string
                  example: rutvik@mailinator.com
                message:
                  type: string
                  example: Hello how are you !

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /admin/upload-avatar:
    post:
      summary: Upload avatars, voices and content pdf
      description: |
        ```
        type : 1 -> Upload new avatars
        type : 2 -> Upload new voices
        type : 3 -> Content PDFs
        ```
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: 1
                avatarName:
                  type: string
                  example: Rohit Sharma
                avatarImage:
                  type: string
                  format: binary
                voiceDescription:
                  type: string
                  description: rohit sharma podcast
                voiceFile:
                  type: string
                  format: binary
                class:
                  type: string
                  example: 10
                subject:
                  type: string
                  example: English
                pdfFile:
                  type: string
                  format: binary

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /admin/avatar:
    get:
      description: Avatar, Voice, and Content list
      summary: Avatar, Voice, and Content list
      tags:
        - Admin

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /admin/teacher-avatar:
    post:
      summary: Upload teacher avatar
      description: |
        - Upload teacher avatar
      tags:
        - Admin
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contentPdfId:
                  type: string
                  example: 67b0527b98b2f29e2cd8846c
                voiceId:
                  type: string
                  example: 67b0526b98b2f29e2cd8846a
                avatarId:
                  type: string
                  example: 67b0524f98b2f29e2cd88468
              required:
                - contentPdfId
                - voiceId
                - avatarId

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/NotFoundError"   

  /teacher/list:
    get:
      description: Teacher avatar list
      summary: teacher avatar list
      tags:
        - Tecaher

      security:
        - bearerAuth: []

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"